{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppAvatarProps",
            "id": "interface-AppAvatarProps-15ded746383e5f777e9c236ba134b131779b715055457acc7b1409cce2d2b304ea437066691cdb3e62475d8ea9f9503996a88de0c9ec5bb920ebcefc1d781b99",
            "file": "src/app/components/avatar/avatar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { AvatarBorderOptions } from '../core/types/avatar';\r\nimport { SizeType } from '../core/types/size';\r\n\r\ntype TypeBorder = \"true\" | \"false\";\r\n\r\nexport interface AppAvatarProps {\r\n  size: SizeType;\r\n  image?: string;\r\n  onErrorImage?: string;\r\n  border?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-avatar',\r\n  templateUrl: './avatar.component.html',\r\n  styleUrls: ['./avatar.component.scss']\r\n})\r\nexport class AvatarComponent implements OnInit {\r\n  @Input() size?: SizeType = 'md'; \r\n  @Input() image?: string;\r\n  @Input() onErrorImage?: string;\r\n  @Input() border: TypeBorder = \"true\";\r\n\r\n  public defaultImage = \"../../assets/user.svg\";\r\n  public type!: AvatarBorderOptions;\r\n\r\n  ngOnInit(): void {\r\n    this.type = AvatarBorderOptions[this.border];\r\n  }\r\n}",
            "properties": [
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "onErrorImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SizeType",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppBadgeProps",
            "id": "interface-AppBadgeProps-35607a1adb8c46e73174d4f12d24212905d3cd519c9599ed9750ca1b4a44be0662ec2f8776622e4f2836b7c56c32cb0d74505e8154ab7c2352e43bac89ef58be",
            "file": "src/app/components/badge/badge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { BadgeDirectionType } from '../core/types/badge';\r\n\r\ntype Size = 'sm' | 'md';\r\ntype Type = 'notification' | 'level';\r\n\r\nexport interface AppBadgeProps {\r\n  value: number;\r\n  type?: Type;\r\n  size?: Size;\r\n  direction?: BadgeDirectionType;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-badge',\r\n  templateUrl: './badge.component.html',\r\n  styleUrls: ['./badge.component.scss'],\r\n})\r\nexport class BadgeComponent implements OnChanges, OnInit {\r\n  @Input() value!: number;\r\n  @Input() type?: Type = 'notification' ;\r\n  @Input() size?: Size = 'md';\r\n  @Input() direction?: BadgeDirectionType = 'bottom-right';\r\n\r\n  valueInBadge?: string;\r\n\r\n  ngOnInit(): void {\r\n    this.valueInBadge = this.formatValue();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.valueInBadge = this.formatValue();\r\n  }\r\n\r\n  formatValue(): string {\r\n    const newValue = this.exists(this.value) ? this.limitValue(this.value) : '';\r\n    return this.type === 'notification' ? newValue : this.value.toString();\r\n  }\r\n\r\n  private exists(value: number): boolean {\r\n    return value !== null && !isNaN(value);\r\n  }\r\n\r\n  private limitValue(value: number): string {\r\n    const maxValue = 99;\r\n    if (value > maxValue) {\r\n      return `${maxValue}+`;\r\n    }\r\n    return value.toString();\r\n  }\r\n}",
            "properties": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BadgeDirectionType",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Size",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppButtonProps",
            "id": "interface-AppButtonProps-9b2c4ce5a263c61a06a6df5c4e2f239d0f0fb35151252b02b5b5172277c900788076d87d7c2f4226bde38993af3eaae38ff5e78f9dbd1cd6f122fb556bd57469",
            "file": "src/app/components/button/button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\r\nimport { IconType } from '../icon/icon.component';\r\nimport { SafeAny } from '../utils/safe-any';\r\n\r\nimport { ButtonIconSizeOptions } from '../core/types/button'\r\n\r\ntype Type = 'primary' | 'secondary' | 'ghost';\r\ntype Size = 'sm' | 'md' | 'lg';\r\ntype Color = 'primary-color' | 'secondary-color';\r\n\r\nexport interface AppButtonProps {\r\n  label?: string;\r\n  type?: Type;\r\n  size?: Size;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  iconType?: IconType;\r\n  rightSideIcon?: boolean;\r\n  expand?: boolean;\r\n  colorType?: Color;\r\n  buttonOnClick?: EventEmitter<SafeAny>;\r\n}\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\n\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() label?: string;\r\n  @Input() type?: Type = 'primary';\r\n  @Input() size: Size = 'sm';\r\n  @Input() disabled? = false;\r\n  @Input() loading? = false;\r\n  @Input() iconType?: string = '';\r\n  @Input() rightSideIcon?: boolean = false;\r\n  @Input() expand?: boolean = false;\r\n  @Input() colorType?: Color = 'primary-color';\r\n  @Output() buttonOnClick = new EventEmitter();\r\n\r\n  public iconSize!: ButtonIconSizeOptions;\r\n\r\n  handleClick() {\r\n    if (!this.loading && !this.disabled) {\r\n      this.loading = !this.loading;\r\n      this.buttonOnClick.emit();\r\n    }\r\n  }\r\n\r\n  expandButton() {\r\n    return this.expand ? '100%' : '';\r\n  }\r\n\r\n  ghostColor() {\r\n    return this.type === 'ghost' ? ' text-' + this.colorType : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.iconSize = ButtonIconSizeOptions[this.size];\r\n  }\r\n}",
            "properties": [
                {
                    "name": "buttonOnClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<SafeAny>",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "colorType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "expand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "iconType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconType",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "rightSideIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Size",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppInputProps",
            "id": "interface-AppInputProps-edeba2d67c3179156ed3feceba4de408c1e1334a99ce4a34e7f05d1e787afaa92a21b1438ebeb1303b5abf93c9247264e918fd275359304c32eee7d8624d6f74",
            "file": "src/app/components/input/input.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\ntype Type = 'user' | 'text' | 'password' | 'email' ;\r\ntype Size = 'sm' | 'md' ;\r\n\r\nexport interface AppInputProps {\r\n  placeholder?: string;\r\n  type?: Type;\r\n  size?: Size; \r\n  visible?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss']\r\n})\r\n\r\nexport class InputComponent  {\r\n  @Input() placeholder?: string = '';\r\n  @Input() type?: Type = 'text';\r\n  @Input() size?: Size = 'md';\r\n  @Input() visible? = false;\r\n\r\n  passwordInput() {\r\n    this.visible = !this.visible;\r\n  }\r\n}",
            "properties": [
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Size",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppTabGroupProps",
            "id": "interface-AppTabGroupProps-3ae92e6d9c782812d85f2e2df4a5ad985042d6fec0e75748e3827ceae6f10a036e5734c8f9f3cb106f084483e1cc634eb92a5d2abe13c219d372230c4eb73a00",
            "file": "src/app/components/tab-group/tab-group.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { AppTabProps, TabSize } from '../tab/tab.component';\r\nimport { DirectionType, BorderDirectionType } from '../core/types/direction';\r\n\r\nexport interface TabGroup extends AppTabProps {\r\n  selected: boolean;\r\n}\r\n\r\nexport interface AppTabGroupProps {\r\n  tabs: TabGroup[];\r\n  border?: BorderDirectionType;\r\n  direction: DirectionType;\r\n  size?: TabSize;\r\n  selected: EventEmitter<TabGroup>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab-group',\r\n  templateUrl: './tab-group.component.html',\r\n  styleUrls: ['./tab-group.component.scss']\r\n})\r\n\r\nexport class TabGroupComponent implements OnInit {\r\n  @Input() tabs: TabGroup[] = [];\r\n  @Input() direction: DirectionType = 'horizontal';\r\n  @Input() border?: BorderDirectionType;\r\n  @Input() size: TabSize = 'md';\r\n  @Output() selected = new EventEmitter<TabGroup>();\r\n\r\n  private getBorderByDirection(direction: DirectionType): BorderDirectionType {\r\n    const directions = {\r\n      horizontal: 'bottom',\r\n      vertical: 'right',\r\n    };\r\n\r\n    if (this.border) {\r\n      return this.border;\r\n    }\r\n\r\n    return directions[direction] as BorderDirectionType;\r\n  }\r\n\r\n  private clearTabs() {\r\n    this.tabs.forEach((tab) => {\r\n      tab.selected = false;\r\n    });\r\n  }\r\n\r\n  public selectTab(tabSelected: TabGroup) {\r\n    this.clearTabs();\r\n    tabSelected.selected = true;\r\n    this.selected.emit(tabSelected);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.border = this.getBorderByDirection(this.direction);\r\n  }\r\n}",
            "properties": [
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BorderDirectionType",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DirectionType",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<TabGroup>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabSize",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabGroup[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppTabProps",
            "id": "interface-AppTabProps-54d541d88f33b7c729cb1b3262bc2d8412fb80dd5d39b76044a16054f1b6df366a688a47bf723202e8e45f8cb5eb5c1d5ebaeb7ee7087eb91150fc4ae2717906",
            "file": "src/app/components/tab/tab.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nexport type TabSize = 'sm' | 'md' | 'lg';\r\ntype BorderDirection = 'bottom' | 'top' | 'right' | 'left';\r\n\r\nexport interface AppTabProps {\r\n  label: string; \r\n  tabSize?: TabSize;\r\n  selected?: boolean;\r\n  disabled?: boolean; \r\n  borderDirection?: BorderDirection;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.scss']\r\n})\r\n\r\nexport class TabComponent {\r\n  @Input() label!: String;\r\n  @Input() tabSize?: TabSize = 'md';\r\n  @Input() selected? = false;\r\n  @Input() disabled? = false;\r\n  @Input() borderDirection?: BorderDirection = 'bottom';\r\n\r\n  public select() {\r\n    this.selected = true;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "borderDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BorderDirection",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "tabSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabSize",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CardProps",
            "id": "interface-CardProps-bfee437c2d27a0dc9a17492b0e33a3b122d650f401dcc614f0267bf4edbeef55d2e266a0e58568ad5c48e97ade6b40d11c80e12a6bd5b87caff25c09562676fa",
            "file": "src/app/components/card/card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { championSquareImgURL, summonerSpellImgURL } from './../../../services/api';\r\nimport { MatchResultOptions, SummonerSpellOptions, Type, SummonerSpell, Victory } from './../core/types/card';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\nexport interface CardProps {\r\n  type: Type,\r\n  victory: Victory,\r\n  champion?: String,\r\n  firstSummonerSpell?: SummonerSpell,\r\n  secondSummonerSpell?: SummonerSpell,\r\n  kill?: Number,\r\n  death?: Number,\r\n  assistance?: Number,\r\n  matchResult?: MatchResultOptions,\r\n  message?: String\r\n}\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() type: Type = 'match-history';\r\n\r\n  //Math History Type Inputs\r\n  @Input() victory: Victory = 'undefined';\r\n  @Input() champion: String = 'lee sin';\r\n  @Input() firstSummonerSpell: SummonerSpell = 'ignite'; \r\n  @Input() secondSummonerSpell: SummonerSpell = 'flash'; \r\n  @Input() kill: Number = 0;\r\n  @Input() death: Number = 0;\r\n  @Input() assistance: Number = 0;\r\n\r\n  public matchResult?: MatchResultOptions;\r\n  public firstSummonerSpellName?: SummonerSpellOptions;\r\n  public secondSummonerSpellName?: SummonerSpellOptions;\r\n  public summonerSpellImgURL = summonerSpellImgURL;\r\n  public championSquareImgURL = championSquareImgURL;\r\n\r\n  championName() {\r\n    const championNameArr: string[] = this.champion.split(' ');\r\n    let formatedChampionName: string = '';\r\n\r\n    for (let i = 0; i < championNameArr.length; i++) {\r\n      formatedChampionName = formatedChampionName + (championNameArr[i].charAt(0).toUpperCase() + championNameArr[i].slice(1));\r\n    }\r\n    return formatedChampionName;\r\n  }\r\n\r\n  kda() {\r\n    const kda = ( Number(this.kill) + Number(this.assistance) ) / Number(this.death)\r\n    return kda.toFixed(1);\r\n  }\r\n\r\n  setMatchResult() {\r\n    if (this.victory === 'true') {\r\n      return 'Vitória';\r\n    } else if (this.victory === 'false') {\r\n      return 'Derrota';\r\n    } else {\r\n      return 'Indefinido';\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.kda()\r\n    this.matchResult = MatchResultOptions[this.victory];\r\n    this.firstSummonerSpellName = SummonerSpellOptions[this.firstSummonerSpell];\r\n    this.secondSummonerSpellName = SummonerSpellOptions[this.secondSummonerSpell];\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "assistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "champion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "death",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "firstSummonerSpell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SummonerSpell",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "kill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "matchResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatchResultOptions",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "secondSummonerSpell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SummonerSpell",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "victory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Victory",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DividerProps",
            "id": "interface-DividerProps-00c835153d865a5132780f0a001fe7ceb9e0048fb199f9071016858720db4239837d4fd7dffea33ecbcd8aed9bb5b7f7aadba69eb4e5a76fcc35b56c7f95e660",
            "file": "src/app/components/divider/divider.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { DirectionType } from './../core/types/direction';\r\n\r\nexport interface DividerProps {\r\n  direction?: DirectionType,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-divider',\r\n  templateUrl: './divider.component.html',\r\n  styleUrls: ['./divider.component.scss']\r\n})\r\nexport class DividerComponent implements OnInit {\r\n  @Input() direction?: DirectionType = 'horizontal';\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DirectionType",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IconProps",
            "id": "interface-IconProps-0c05f29e95c27c2174d92516f98ec5f3e0138ff9e7ac05812a0f461ac7db2b1b410bc81f5bc45171f42b66ea8070a7be2740f440e3d6349094c9b2031f82c8ef",
            "file": "src/app/components/icon/icon.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, ElementRef } from '@angular/core';\r\nimport { iconsPaths } from './svgs/icons';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport type SvgModule = typeof import('./svgs/icons');\r\nexport type IconType = keyof typeof iconsPaths;\r\n\r\nexport interface IconProps {\r\n  type?: IconType,\r\n  size?: number,\r\n  color?: string, \r\n}\r\n\r\n@Component({\r\n  selector: 'app-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\n\r\nexport class AppIconComponent {\r\n  @Input() type!: IconType;\r\n  @Input() size = 17;\r\n  @Input() color = '#fcfaff'\r\n\r\n  constructor(private sanitizer: DomSanitizer, private el: ElementRef) {}\r\n\r\n  getPath() {\r\n    return this.sanitizer.bypassSecurityTrustHtml(iconsPaths[this.type]);\r\n  }\r\n\r\n  changeColor() {\r\n    return this.type === \"add\" ? this.color : 'transparent'\r\n  }\r\n}",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconType",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProgressBarProps",
            "id": "interface-ProgressBarProps-8874bea6fc4a6ca8cd37c3aa4c82d0ceda24bc37604d2432fe4f400f5b510a20719e615f8abb795d837cdba139f602cb0cf46ba643a2913529f9f0dbb110e43c",
            "file": "src/app/components/progress-bar/progress-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { Type } from '../core/types/progress-bar';\r\n\r\nexport interface ProgressBarProps {\r\n  type: Type,\r\n  win: Number,\r\n  lose: Number,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n  @Input() type: Type = 'progress-bar';\r\n  @Input() win: Number = 0;\r\n  @Input() lose: Number = 0;\r\n\r\n  public fullWidth = false; \r\n\r\n  winPercent() {\r\n    const percent = (Number(this.win) / (Number(this.win) +  Number(this.lose))) * 100;\r\n\r\n    if (percent === 100) {\r\n      this.fullWidth = true;\r\n    }\r\n\r\n    return `${percent.toFixed(0)}%`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "lose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "win",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchProps",
            "id": "interface-SearchProps-d0b62220b52cca5ac996bbbf35a38d182be8ece511a5e65fc7f09da39b7f7e4b253ba74c7dfc46365fcd508fa0fbd9154c06a44f520cbf408f51e0cb451988e0",
            "file": "src/app/components/search/search.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { SearchTypeOptions } from './../core/types/search';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\ntype size = 'md' | 'lg';\r\ntype filter = 'true' | 'false';\r\n\r\nexport interface SearchProps {\r\n  filter?: string;\r\n  size?: string;\r\n  placeholder?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  @Input() filter:filter = 'false';\r\n  @Input() size?:size = 'md';\r\n  @Input() placeholder? = 'Procure por um usuário...';\r\n\r\n  public type!: SearchTypeOptions;\r\n\r\n  ngOnInit(): void {\r\n    this.type = SearchTypeOptions[this.filter]\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TabGroup",
            "id": "interface-TabGroup-3ae92e6d9c782812d85f2e2df4a5ad985042d6fec0e75748e3827ceae6f10a036e5734c8f9f3cb106f084483e1cc634eb92a5d2abe13c219d372230c4eb73a00",
            "file": "src/app/components/tab-group/tab-group.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { AppTabProps, TabSize } from '../tab/tab.component';\r\nimport { DirectionType, BorderDirectionType } from '../core/types/direction';\r\n\r\nexport interface TabGroup extends AppTabProps {\r\n  selected: boolean;\r\n}\r\n\r\nexport interface AppTabGroupProps {\r\n  tabs: TabGroup[];\r\n  border?: BorderDirectionType;\r\n  direction: DirectionType;\r\n  size?: TabSize;\r\n  selected: EventEmitter<TabGroup>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab-group',\r\n  templateUrl: './tab-group.component.html',\r\n  styleUrls: ['./tab-group.component.scss']\r\n})\r\n\r\nexport class TabGroupComponent implements OnInit {\r\n  @Input() tabs: TabGroup[] = [];\r\n  @Input() direction: DirectionType = 'horizontal';\r\n  @Input() border?: BorderDirectionType;\r\n  @Input() size: TabSize = 'md';\r\n  @Output() selected = new EventEmitter<TabGroup>();\r\n\r\n  private getBorderByDirection(direction: DirectionType): BorderDirectionType {\r\n    const directions = {\r\n      horizontal: 'bottom',\r\n      vertical: 'right',\r\n    };\r\n\r\n    if (this.border) {\r\n      return this.border;\r\n    }\r\n\r\n    return directions[direction] as BorderDirectionType;\r\n  }\r\n\r\n  private clearTabs() {\r\n    this.tabs.forEach((tab) => {\r\n      tab.selected = false;\r\n    });\r\n  }\r\n\r\n  public selectTab(tabSelected: TabGroup) {\r\n    this.clearTabs();\r\n    tabSelected.selected = true;\r\n    this.selected.emit(tabSelected);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.border = this.getBorderByDirection(this.direction);\r\n  }\r\n}",
            "properties": [
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "AppTabProps"
        },
        {
            "name": "TagProps",
            "id": "interface-TagProps-0e72735eb03afefa0e9e60bd69f562f9337101ef972e907471ddd90e4e276bd055daaad4b7a41b60b3241b6c82b932b30e2a2834c4404491c33f6a97b93d506e",
            "file": "src/app/components/tag/tag.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PositionIconOptions, Label } from './../core/types/tag';\r\n// import { IconType } from './../icon/icon.component';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\nexport interface TagProps {\r\n  label: Label;\r\n  icon?: boolean;\r\n  iconType?: PositionIconOptions;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.scss']\r\n})\r\nexport class TagComponent implements OnInit {\r\n  @Input() public label!: Label;\r\n  @Input() public icon? = true;\r\n\r\n  public iconType!: PositionIconOptions;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.iconType = PositionIconOptions[this.label];\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "iconType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PositionIconOptions",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Label",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-76fdbf17a7ae91a5e73fae921aa65cd023c7ad217a5f3a07c4af23b20329ea52854ba6943c07f05c6a1c0ad4e43e926f24acf0c62638406161a9e0fc230674b4",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'legends-tracker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'legends-tracker';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../app/styles/index.scss';\r\n\r\ndiv {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 10px;\r\n    gap: 10px;\r\n}\r\n\r\n.avatar {\r\n    position: relative;\r\n    width: 85px;\r\n    height: 85px;\r\n    border: 2px solid red;\r\n    border-radius: 50%;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container\">\r\n    <app-tag label=\"mid\"></app-tag>\r\n\r\n    <app-button label=\"Firmino\" size=\"sm\"></app-button>\r\n\r\n    <app-button size=\"sm\" label=\"Ver mais\" iconType=\"interrogation\"></app-button>\r\n\r\n    <app-button type='secondary' size=\"md\" label=\"Secondary\" [loading]=\"true\"></app-button>\r\n\r\n    <app-button type='ghost' size=\"sm\" label=\"Ghost\" ></app-button>\r\n\r\n    <app-button type='ghost' size=\"md\" label=\"Ghost\" colorType=\"secondary-color\"></app-button>\r\n\r\n    <div class=\"avatar\">\r\n        <app-badge type=\"notification\" size=\"md\" direction=\"bottom-right\"></app-badge>\r\n    </div>\r\n\r\n    <div style=\"display: flex; gap: 10px;\">\r\n        <app-tag label=\"suporte\"></app-tag>\r\n        <app-tag label=\"adc\"></app-tag>\r\n    </div>\r\n\r\n    <div class=\"avatar\">\r\n        <app-badge type=\"notification\" [value]=\"10\" size=\"md\" direction=\"bottom-right\"></app-badge>\r\n    </div>\r\n\r\n    <div style=\"display: flex; gap: 10px;\">\r\n        <app-tag label=\"suporte\"></app-tag> \r\n        <app-tag label=\"adc\"></app-tag>\r\n    </div>\r\n\r\n    <div>\r\n        <app-input size=\"sm\" placeholder=\"Digite algo aqui\"></app-input>\r\n        <app-input placeholder=\"Digite algo aqui\" type=\"email\"></app-input>\r\n        <app-input size=\"md\" placeholder=\"Digite algo aqui\" type=\"password\"></app-input>\r\n    </div>\r\n\r\n    <div>\r\n        <h3>Card Component - Match History Variant</h3>\r\n        <app-card type=\"match-history\" victory=\"true\" champion=\"yuumi\" firstSummonerSpell=\"heal\" secondSummonerSpell=\"ignite\" [kill]=\"1\" [death]=\"3\" [assistance]=\"28\"></app-card>\r\n        <app-card type=\"match-history\" victory=\"false\" champion=\"irelia\" firstSummonerSpell=\"flash\" secondSummonerSpell=\"ignite\" [kill]=\"1\" [death]=\"36\" [assistance]=\"19\"></app-card>\r\n        <app-card type=\"match-history\" victory=\"true\" champion=\"caitlyn\" firstSummonerSpell=\"barrier\" secondSummonerSpell=\"flash\" [kill]=\"6\" [death]=\"2\" [assistance]=\"3\"></app-card>\r\n        <app-card type=\"match-history\" champion=\"anivia\" firstSummonerSpell=\"barrier\" secondSummonerSpell=\"flash\" [kill]=\"6\" [death]=\"2\" [assistance]=\"3\"></app-card>\r\n    </div>\r\n\r\n    <app-tag label=\"mid\"></app-tag>\r\n</div>"
        },
        {
            "name": "AppIconComponent",
            "id": "component-AppIconComponent-0c05f29e95c27c2174d92516f98ec5f3e0138ff9e7ac05812a0f461ac7db2b1b410bc81f5bc45171f42b66ea8070a7be2740f440e3d6349094c9b2031f82c8ef",
            "file": "src/app/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#fcfaff'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "17",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "IconType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPath",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ElementRef } from '@angular/core';\r\nimport { iconsPaths } from './svgs/icons';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport type SvgModule = typeof import('./svgs/icons');\r\nexport type IconType = keyof typeof iconsPaths;\r\n\r\nexport interface IconProps {\r\n  type?: IconType,\r\n  size?: number,\r\n  color?: string, \r\n}\r\n\r\n@Component({\r\n  selector: 'app-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\n\r\nexport class AppIconComponent {\r\n  @Input() type!: IconType;\r\n  @Input() size = 17;\r\n  @Input() color = '#fcfaff'\r\n\r\n  constructor(private sanitizer: DomSanitizer, private el: ElementRef) {}\r\n\r\n  getPath() {\r\n    return this.sanitizer.bypassSecurityTrustHtml(iconsPaths[this.type]);\r\n  }\r\n\r\n  changeColor() {\r\n    return this.type === \"add\" ? this.color : 'transparent'\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    display: inline-flex;\r\n}",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<svg\r\n  style.height.px=\"{{ size }}\"\r\n  style.width.px=\"{{ size }}\"\r\n  style.stroke=\"{{ color }}\"\r\n  viewBox=\"0 0 24 24\"\r\n  [style.fill]=\"changeColor()\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  [id]=\"'app-icon-' + type\"\r\n  data-testid=\"iconElement\"\r\n  [innerHTML]=\"getPath()\"\r\n></svg>\r\n\r\n  <!-- attr.height=\"{{ size }}px\"\r\n  attr.width=\"{{ size }}px\" -->"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-15ded746383e5f777e9c236ba134b131779b715055457acc7b1409cce2d2b304ea437066691cdb3e62475d8ea9f9503996a88de0c9ec5bb920ebcefc1d781b99",
            "file": "src/app/components/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "border",
                    "defaultValue": "\"true\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "TypeBorder",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onErrorImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "SizeType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultImage",
                    "defaultValue": "\"../../assets/user.svg\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AvatarBorderOptions",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { AvatarBorderOptions } from '../core/types/avatar';\r\nimport { SizeType } from '../core/types/size';\r\n\r\ntype TypeBorder = \"true\" | \"false\";\r\n\r\nexport interface AppAvatarProps {\r\n  size: SizeType;\r\n  image?: string;\r\n  onErrorImage?: string;\r\n  border?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-avatar',\r\n  templateUrl: './avatar.component.html',\r\n  styleUrls: ['./avatar.component.scss']\r\n})\r\nexport class AvatarComponent implements OnInit {\r\n  @Input() size?: SizeType = 'md'; \r\n  @Input() image?: string;\r\n  @Input() onErrorImage?: string;\r\n  @Input() border: TypeBorder = \"true\";\r\n\r\n  public defaultImage = \"../../assets/user.svg\";\r\n  public type!: AvatarBorderOptions;\r\n\r\n  ngOnInit(): void {\r\n    this.type = AvatarBorderOptions[this.border];\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n@mixin add-size($size, $border: true) {\r\n    width: $size + 8px;\r\n    height: $size + 8px;\r\n\r\n    @if ($border) {\r\n        width: $size;\r\n        height: $size;\r\n    }\r\n}\r\n\r\n@mixin avatarAtributes() {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    background-color: $neutral-2;\r\n    \r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n}\r\n\r\n@mixin borderAtributes() {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    background-image: $linearGradient-5;\r\n}\r\n\r\n@mixin backgroundAtributes() {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    background: $neutral-1;\r\n}\r\n\r\n@mixin drop-shadow() {\r\n    box-shadow: 0px 3px 8px rgba(125, 129, 225, 0.3);\r\n}\r\n\r\n.bordered-avatar-size-sm {\r\n    @include avatarAtributes();\r\n    @include add-size(67px);\r\n}\r\n\r\n.bordered-avatar-size-md {\r\n    @include avatarAtributes();\r\n    @include add-size(92px);\r\n}\r\n\r\n.bordered-avatar-size-lg {\r\n    @include avatarAtributes();\r\n    @include add-size(117px);\r\n}\r\n\r\n.common-avatar-size-sm {\r\n    @include avatarAtributes();\r\n    @include add-size(67px, false);\r\n}\r\n\r\n.common-avatar-size-md {\r\n    @include avatarAtributes();\r\n    @include add-size(92px, false);\r\n}\r\n\r\n.common-avatar-size-lg {\r\n    @include avatarAtributes();\r\n    @include add-size(117px, false);\r\n}\r\n\r\n.border-size-sm {\r\n    @include borderAtributes();\r\n    @include add-size(75px);  \r\n    @include drop-shadow();\r\n}\r\n\r\n.border-size-md {\r\n    @include borderAtributes();\r\n    @include add-size(100px);  \r\n    @include drop-shadow();\r\n}\r\n\r\n.border-size-lg {\r\n    @include borderAtributes();\r\n    @include add-size(125px);\r\n    @include drop-shadow();  \r\n}\r\n\r\n.background-size-sm {\r\n    @include backgroundAtributes();\r\n    @include add-size(71px);\r\n}\r\n\r\n.background-size-md {\r\n    @include backgroundAtributes();\r\n    @include add-size(96px);\r\n}\r\n\r\n.background-size-lg {\r\n    @include backgroundAtributes();\r\n    @include add-size(121px);\r\n}",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \r\n    [class]=\"'border-size-' + size\" \r\n    *ngIf=\"border == 'true'\" \r\n    data-testid=\"avatarElement\"\r\n>\r\n    <div [class]=\"'background-size-' + size\">\r\n        <div\r\n            [class]=\"type + '-avatar-size-' + size\"\r\n        >\r\n            <img [src]=\"image || defaultImage\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div\r\n    [class]=\"type + '-avatar-size-' + size\"\r\n    *ngIf = \"border == 'false'\"\r\n    data-testid=\"avatarElement-without-border\"\r\n>\r\n    <img [src]=\"image || defaultImage\" />\r\n</div>"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-35607a1adb8c46e73174d4f12d24212905d3cd519c9599ed9750ca1b4a44be0662ec2f8776622e4f2836b7c56c32cb0d74505e8154ab7c2352e43bac89ef58be",
            "file": "src/app/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "direction",
                    "defaultValue": "'bottom-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "BadgeDirectionType",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Size",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'notification'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Type",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "valueInBadge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "exists",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatValue",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "limitValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { BadgeDirectionType } from '../core/types/badge';\r\n\r\ntype Size = 'sm' | 'md';\r\ntype Type = 'notification' | 'level';\r\n\r\nexport interface AppBadgeProps {\r\n  value: number;\r\n  type?: Type;\r\n  size?: Size;\r\n  direction?: BadgeDirectionType;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-badge',\r\n  templateUrl: './badge.component.html',\r\n  styleUrls: ['./badge.component.scss'],\r\n})\r\nexport class BadgeComponent implements OnChanges, OnInit {\r\n  @Input() value!: number;\r\n  @Input() type?: Type = 'notification' ;\r\n  @Input() size?: Size = 'md';\r\n  @Input() direction?: BadgeDirectionType = 'bottom-right';\r\n\r\n  valueInBadge?: string;\r\n\r\n  ngOnInit(): void {\r\n    this.valueInBadge = this.formatValue();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.valueInBadge = this.formatValue();\r\n  }\r\n\r\n  formatValue(): string {\r\n    const newValue = this.exists(this.value) ? this.limitValue(this.value) : '';\r\n    return this.type === 'notification' ? newValue : this.value.toString();\r\n  }\r\n\r\n  private exists(value: number): boolean {\r\n    return value !== null && !isNaN(value);\r\n  }\r\n\r\n  private limitValue(value: number): string {\r\n    const maxValue = 99;\r\n    if (value > maxValue) {\r\n      return `${maxValue}+`;\r\n    }\r\n    return value.toString();\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/index.scss\";\r\n\r\n@mixin badge-size($badgeSize, $fontSize) {\r\n    width: $badgeSize;\r\n    height: $badgeSize;\r\n    font-size: $fontSize;\r\n}\r\n\r\n@mixin badge-colors($color, $backgroundColor) {\r\n    color: $color;\r\n    background-color: $backgroundColor;\r\n}\r\n\r\nspan {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 10px;\r\n    padding: 1px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n}\r\n\r\n.notification-app-badge-sm {\r\n    @include badge-size(18px, 8px);\r\n    @include badge-colors($neutral-color, $primary-color);\r\n}\r\n\r\n.notification-app-badge-md {\r\n    @include badge-size(24px, 10px);\r\n    @include badge-colors($neutral-color, $primary-color);\r\n}\r\n\r\n.level-app-badge-sm {\r\n    @include badge-size(26px, 10px);\r\n    @include badge-colors($neutral-color, $neutral-3);\r\n    border: 1px solid $neutral-1;\r\n}\r\n\r\n.level-app-badge-md {\r\n    @include badge-size(28px, 10px);\r\n    @include badge-colors($neutral-color, $neutral-3);\r\n    border: 1px solid $neutral-1;\r\n}\r\n\r\n.app-badge-bottom-right {\r\n    left: 70%;\r\n    bottom: 0%;\r\n}\r\n\r\n.app-badge-bottom-left {\r\n    right: 70%;\r\n    bottom: 0%;\r\n}\r\n\r\n.app-badge-top-right {\r\n    left: 70%;\r\n    top: 0%;\r\n}\r\n\r\n.app-badge-top-left {\r\n    right: 70%;\r\n    top: 0%;\r\n}",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<span\r\n    data-testid=\"badgeElement\"\r\n    [class]=\"type + '-app-badge-' + size + ' app-badge-' + direction\"\r\n>{{ valueInBadge }}</span>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-9b2c4ce5a263c61a06a6df5c4e2f239d0f0fb35151252b02b5b5172277c900788076d87d7c2f4226bde38993af3eaae38ff5e78f9dbd1cd6f122fb556bd57469",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "colorType",
                    "defaultValue": "'primary-color'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Color",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "expand",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconType",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rightSideIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Size",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Type",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonOnClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "iconSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonIconSizeOptions",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "expandButton",
                    "args": [],
                    "optional": false,
                    "returnType": "\"100%\" | \"\"",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ghostColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\r\nimport { IconType } from '../icon/icon.component';\r\nimport { SafeAny } from '../utils/safe-any';\r\n\r\nimport { ButtonIconSizeOptions } from '../core/types/button'\r\n\r\ntype Type = 'primary' | 'secondary' | 'ghost';\r\ntype Size = 'sm' | 'md' | 'lg';\r\ntype Color = 'primary-color' | 'secondary-color';\r\n\r\nexport interface AppButtonProps {\r\n  label?: string;\r\n  type?: Type;\r\n  size?: Size;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  iconType?: IconType;\r\n  rightSideIcon?: boolean;\r\n  expand?: boolean;\r\n  colorType?: Color;\r\n  buttonOnClick?: EventEmitter<SafeAny>;\r\n}\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\n\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() label?: string;\r\n  @Input() type?: Type = 'primary';\r\n  @Input() size: Size = 'sm';\r\n  @Input() disabled? = false;\r\n  @Input() loading? = false;\r\n  @Input() iconType?: string = '';\r\n  @Input() rightSideIcon?: boolean = false;\r\n  @Input() expand?: boolean = false;\r\n  @Input() colorType?: Color = 'primary-color';\r\n  @Output() buttonOnClick = new EventEmitter();\r\n\r\n  public iconSize!: ButtonIconSizeOptions;\r\n\r\n  handleClick() {\r\n    if (!this.loading && !this.disabled) {\r\n      this.loading = !this.loading;\r\n      this.buttonOnClick.emit();\r\n    }\r\n  }\r\n\r\n  expandButton() {\r\n    return this.expand ? '100%' : '';\r\n  }\r\n\r\n  ghostColor() {\r\n    return this.type === 'ghost' ? ' text-' + this.colorType : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.iconSize = ButtonIconSizeOptions[this.size];\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n@mixin add-colors($backgroundColor, $color) {\r\n    background-color: $backgroundColor;\r\n    color: $color;\r\n}\r\n\r\n@mixin add-animation($type, $loadingType , $color ) {\r\n    .#{$type}-#{$loadingType} {\r\n        position: relative;\r\n        left: -1000px;\r\n        width:6px;\r\n        height:6px;\r\n        border-radius: 5px;\r\n        background-color: $color;\r\n        color: $color;\r\n        box-shadow: 1000px 0 0 0 $color;\r\n        animation: #{$type}-#{$loadingType} 1s infinite linear;\r\n        animation-delay: .1s;\r\n        \r\n        &::before {\r\n            width:6px;\r\n            height:6px;\r\n            border-radius: 5px;\r\n            background-color: $color;\r\n            color: $color;\r\n            animation: #{$type}-#{$loadingType}Before 1s infinite linear;\r\n            animation-delay: 0s;\r\n        }\r\n        \r\n        &::before, &::after {\r\n            content: '';\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n        }\r\n        \r\n        &::after {\r\n            width:6px;\r\n            height:6px;\r\n            border-radius: 5px;\r\n            background-color: $color;\r\n            color: $color;\r\n            animation: #{$type}-#{$loadingType}After 1s infinite linear;\r\n            animation-delay: .2s;\r\n        }\r\n    }\r\n    \r\n    @keyframes #{$type}-#{$loadingType} {\r\n        0% {\r\n            box-shadow: 1000px -15px 0 0 rgba(152, 128, 255, 0);\r\n        }\r\n        25%,\r\n        50%,\r\n        75% {\r\n            box-shadow: 1000px 0 0 0 $color;\r\n        }\r\n        100% {\r\n            box-shadow: 1000px 15px 0 0 rgba(152, 128, 255, 0);\r\n        }\r\n    }\r\n        \r\n    @keyframes #{$type}-#{$loadingType}Before {\r\n        0% {\r\n            box-shadow: 984px -15px 0 0 rgba(152, 128, 255, 0);\r\n        }\r\n        25%,\r\n        50%,\r\n        75% {\r\n            box-shadow: 984px 0 0 0 $color;\r\n        }\r\n        100% {\r\n            box-shadow: 984px 15px 0 0 rgba(152, 128, 255, 0);\r\n        }\r\n    }\r\n        \r\n    @keyframes #{$type}-#{$loadingType}After {\r\n        0% {\r\n            box-shadow: 1010px -15px 0 0 rgba(152, 128, 255, 0);\r\n        }\r\n        25%,\r\n        50%,\r\n        75% {\r\n            box-shadow: 1010px 0 0 0 $color;\r\n        }\r\n        100% {\r\n            box-shadow: 1010px 15px 0 0 rgba(152, 128, 255, 0);\r\n        }\r\n    }\r\n}\r\n\r\n@mixin button-parameters(\r\n    $buttonSize,\r\n    $paddingTopBottom,\r\n    $paddingLeftRight,\r\n    $fontSize,\r\n) {\r\n    min-width: $buttonSize * 2;\r\n    height: $buttonSize;\r\n    padding: $paddingTopBottom $paddingLeftRight;\r\n\r\n    span {\r\n        font-size: $fontSize;\r\n    }\r\n}\r\n\r\nbutton {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 2px;\r\n    font-weight: 500;\r\n    border: 0;\r\n    color: $neutral-7;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    transition: 300ms;\r\n\r\n    &:focus-visible {\r\n        @include add-colors($neutral-4 !important, $neutral-5 !important);\r\n        cursor: not-allowed;\r\n\r\n        app-icon {\r\n            ::ng-deep svg {\r\n              fill: $neutral-5;\r\n            }\r\n        }\r\n    }\r\n    \r\n    &:disabled,\r\n    &:disabled:hover,\r\n    &[disabled],\r\n    &[disabled]:hover {\r\n        cursor: not-allowed;\r\n    \r\n        app-icon {\r\n            ::ng-deep svg {\r\n                fill: $neutral-6;\r\n            }\r\n        }\r\n    }\r\n\r\n    app-icon {\r\n        ::ng-deep svg {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            fill: $neutral-color;\r\n        }\r\n    }\r\n}\r\n\r\n.app-button-sm {\r\n    @include button-parameters(30px, 12px, 10px, 14px);\r\n}\r\n\r\n.app-button-md {\r\n    @include button-parameters(34px, 16px, 14px, 16px);\r\n}\r\n\r\n.app-button-lg {\r\n    @include button-parameters(38px, 20px, 18px, 18px);\r\n}\r\n\r\n.app-button-primary {\r\n    @include add-animation('primary', 'loadingAnimation', $neutral-color);\r\n\r\n    background-color: $primary-color;\r\n    border: 1px solid transparentize($primary-3, 0.5);\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\r\n\r\n    &:hover {\r\n        background-color: darken($primary-color, 2%);\r\n        border: 1px solid transparentize(darken($primary-3, 2%), 0.5);\r\n        box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.15);\r\n        transform: translateY(-2px);\r\n        transition: transform 200ms ease 0s, background-color 200ms ease 0s;\r\n    }\r\n    \r\n    &:active {\r\n        background-color: lighten($primary-color, 2%);\r\n        border: 1px solid transparentize(lighten($primary-3, 2%), 0.6);\r\n        box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.15);\r\n    }\r\n    \r\n    &:disabled {\r\n        color: rgba(252, 250, 255, 0.5) !important;\r\n        background-color: $neutral-4;\r\n        border: none;\r\n        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\r\n    }\r\n}\r\n\r\n.app-button-secondary {\r\n    @include add-animation('secondary', 'loadingAnimation', $primary-color);\r\n\r\n    @include add-colors(transparent, $primary-color);\r\n    \r\n    border: 1px solid $primary-color;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\r\n    \r\n    &:hover {\r\n        @include add-colors(transparentize(darken($primary-color, 2%), 0.9), $primary-color);\r\n        border: 1px solid darken($primary-color, 2%);\r\n        box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.15);\r\n        transform: translateY(-2px);\r\n        transition: transform 200ms ease 0s, background-color 200ms ease 0s;\r\n    }\r\n    \r\n    &:active {\r\n        @include add-colors(transparentize($primary-color, 0.85), lighten($primary-color, 2%));\r\n        border: 1px solid lighten($primary-color, 2%); \r\n        box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.15);\r\n    }   \r\n}\r\n\r\n.app-button-ghost {\r\n    background-color: $neutral-1;\r\n\r\n    &:hover {\r\n        background-color: transparentize($primary-color, 0.95);\r\n        transform: translateY(-2px);\r\n        transition: transform 200ms ease 0s, background-color 200ms ease 0s;\r\n    }\r\n    \r\n    &:active {\r\n        background-color: transparentize($primary-color, 0.85);\r\n    }\r\n}\r\n\r\n.text-primary-color {\r\n    @include add-animation('primary-color', 'loadingGhost', $primary-color);\r\n\r\n    color: $primary-color;\r\n\r\n    app-icon {\r\n        ::ng-deep svg {\r\n            stroke: $primary-color !important;\r\n            fill: $primary-color !important;\r\n        }\r\n    }\r\n}\r\n\r\n.text-secondary-color {\r\n    @include add-animation('secondary-color', 'loadingGhost', $neutral-color);\r\n\r\n    color: $neutral-color;\r\n}\r\n\r\n.loading {\r\n    cursor: not-allowed;\r\n    padding: 0 12px;\r\n}\r\n  \r\n.right-side-icon {\r\n    flex-direction: row-reverse;\r\n}\r\n  \r\n.app-remove-space {\r\n    padding: 0 !important;\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\r\n    [class]=\"'app-button-' + type + ' app-button-' + size + ghostColor()\"\r\n    [style.width]=\"expandButton()\"\r\n    [class.loading]=\"loading\"\r\n    [class.app-remove-space]=\"iconType && !!!label\"\r\n    [class.right-side-icon]=\"rightSideIcon\"\r\n    [disabled]=\"disabled\"\r\n    (click)=\"handleClick()\"\r\n>\r\n    <span *ngIf=\"loading\" [class]=\"type + '-loadingAnimation ' + colorType + '-loadingGhost'\"></span>\r\n    <app-icon\r\n        *ngIf=\"iconType && !loading\"\r\n        [type]=\"iconType\"\r\n        [size]=\"iconSize\"\r\n        class=\"icon\"\r\n    ></app-icon>\r\n    <span \r\n        *ngIf=\"label || loading\">{{\r\n            loading ? '' : label\r\n        }}\r\n    </span>\r\n</button>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-bfee437c2d27a0dc9a17492b0e33a3b122d650f401dcc614f0267bf4edbeef55d2e266a0e58568ad5c48e97ade6b40d11c80e12a6bd5b87caff25c09562676fa",
            "file": "src/app/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "assistance",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Number",
                    "decorators": []
                },
                {
                    "name": "champion",
                    "defaultValue": "'lee sin'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "death",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Number",
                    "decorators": []
                },
                {
                    "name": "firstSummonerSpell",
                    "defaultValue": "'ignite'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "SummonerSpell",
                    "decorators": []
                },
                {
                    "name": "kill",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Number",
                    "decorators": []
                },
                {
                    "name": "secondSummonerSpell",
                    "defaultValue": "'flash'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "SummonerSpell",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'match-history'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Type",
                    "decorators": []
                },
                {
                    "name": "victory",
                    "defaultValue": "'undefined'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Victory",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "championSquareImgURL",
                    "defaultValue": "championSquareImgURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "firstSummonerSpellName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SummonerSpellOptions",
                    "optional": true,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "matchResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatchResultOptions",
                    "optional": true,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "secondSummonerSpellName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SummonerSpellOptions",
                    "optional": true,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "summonerSpellImgURL",
                    "defaultValue": "summonerSpellImgURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "championName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "kda",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMatchResult",
                    "args": [],
                    "optional": false,
                    "returnType": "\"Vitória\" | \"Derrota\" | \"Indefinido\"",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { championSquareImgURL, summonerSpellImgURL } from './../../../services/api';\r\nimport { MatchResultOptions, SummonerSpellOptions, Type, SummonerSpell, Victory } from './../core/types/card';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\nexport interface CardProps {\r\n  type: Type,\r\n  victory: Victory,\r\n  champion?: String,\r\n  firstSummonerSpell?: SummonerSpell,\r\n  secondSummonerSpell?: SummonerSpell,\r\n  kill?: Number,\r\n  death?: Number,\r\n  assistance?: Number,\r\n  matchResult?: MatchResultOptions,\r\n  message?: String\r\n}\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() type: Type = 'match-history';\r\n\r\n  //Math History Type Inputs\r\n  @Input() victory: Victory = 'undefined';\r\n  @Input() champion: String = 'lee sin';\r\n  @Input() firstSummonerSpell: SummonerSpell = 'ignite'; \r\n  @Input() secondSummonerSpell: SummonerSpell = 'flash'; \r\n  @Input() kill: Number = 0;\r\n  @Input() death: Number = 0;\r\n  @Input() assistance: Number = 0;\r\n\r\n  public matchResult?: MatchResultOptions;\r\n  public firstSummonerSpellName?: SummonerSpellOptions;\r\n  public secondSummonerSpellName?: SummonerSpellOptions;\r\n  public summonerSpellImgURL = summonerSpellImgURL;\r\n  public championSquareImgURL = championSquareImgURL;\r\n\r\n  championName() {\r\n    const championNameArr: string[] = this.champion.split(' ');\r\n    let formatedChampionName: string = '';\r\n\r\n    for (let i = 0; i < championNameArr.length; i++) {\r\n      formatedChampionName = formatedChampionName + (championNameArr[i].charAt(0).toUpperCase() + championNameArr[i].slice(1));\r\n    }\r\n    return formatedChampionName;\r\n  }\r\n\r\n  kda() {\r\n    const kda = ( Number(this.kill) + Number(this.assistance) ) / Number(this.death)\r\n    return kda.toFixed(1);\r\n  }\r\n\r\n  setMatchResult() {\r\n    if (this.victory === 'true') {\r\n      return 'Vitória';\r\n    } else if (this.victory === 'false') {\r\n      return 'Derrota';\r\n    } else {\r\n      return 'Indefinido';\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.kda()\r\n    this.matchResult = MatchResultOptions[this.victory];\r\n    this.firstSummonerSpellName = SummonerSpellOptions[this.firstSummonerSpell];\r\n    this.secondSummonerSpellName = SummonerSpellOptions[this.secondSummonerSpell];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n@mixin victory-border-color( $victory:boolean ) {\r\n    @if ($victory) {\r\n        border-left: 3px solid $secondary-color;\r\n    } @else {\r\n        border-left: 3px solid $negative-color;\r\n    }\r\n}\r\n\r\n.match-history-card {\r\n    background-color: transparentize($neutral-2, 0.1);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    border-radius: 5px;\r\n    box-shadow: $card-shadow;\r\n    backdrop-filter: blur(4px);\r\n    width: 100%;\r\n    height: 120px;\r\n    padding: 1rem;\r\n    border-left: 3px solid $secondary-color;\r\n    width: 100%;\r\n}\r\n\r\n.victory-match-card {\r\n    @include victory-border-color(true);\r\n\r\n    & .match-result {\r\n        color: $secondary-color;\r\n    }\r\n}\r\n\r\n.defeat-match-card {\r\n    @include victory-border-color(false);\r\n\r\n    & .match-result {\r\n        color: $negative-color;\r\n    }\r\n}\r\n\r\n.undefined-match-card {\r\n    border-left: 3px solid $neutral-5;\r\n\r\n    & .match-result {\r\n        color: $neutral-5;\r\n    }\r\n}\r\n\r\n.main-content-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5%;\r\n    height: 100%;\r\n    width: 80%;\r\n}\r\n\r\n.first-content-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 3%;\r\n    height: 100%;\r\n    width: 70%;\r\n}\r\n\r\n.champion-img {\r\n    border-radius: 50%;\r\n    height: 100%;\r\n}\r\n\r\n.runes-container, .summoner-spells-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    height: 100%;\r\n}\r\n\r\n.rune-img {\r\n    height: 26px;\r\n}\r\n\r\n.rune-img:nth-child(1) {\r\n    height: 40px;\r\n}\r\n\r\n.summoner-spells-img {\r\n    height: 30px;\r\n    border-radius: 50%;\r\n}\r\n\r\n.match-info-container, .match-scoreboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 5px;\r\n    height: 100%;   \r\n}\r\n\r\n.match-result {\r\n    color: $secondary-color;\r\n    font-weight: 600 !important;\r\n    @include font-size-xl();\r\n}\r\n\r\n.match-type {\r\n    @include font-size-md();\r\n    font-weight: 500 !important;\r\n}\r\n\r\n.match-duration-date {\r\n    color: $neutral-4;\r\n    @include font-size-sm();\r\n}\r\n\r\n.match-score {\r\n    @include font-size-lg();\r\n    font-weight: 600 !important;\r\n}\r\n\r\n.match-kda {\r\n    @include font-size-sm();\r\n    font-weight: 600 !important;\r\n    color: $neutral-4;\r\n}\r\n\r\n.match-highlighted-kda {\r\n    color: $primary-color;\r\n}\r\n\r\n.divider-container {\r\n    height: 80%;\r\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n    *ngIf=\"type === 'match-history'\"\r\n    [class]=\"type + '-card ' + matchResult\"\r\n    data-testid='cardElement'\r\n>\r\n    <div class=\"main-content-container\">\r\n        <div class=\"first-content-container\">\r\n            <img\r\n                class=\"champion-img\"\r\n                [src]=\"championSquareImgURL + championName() + '.png'\"\r\n            />\r\n            <div class=\"runes-container\">\r\n                <img\r\n                    class=\"rune-img\"\r\n                    src=\"../../../assets/runes/PressTheAttack.png\"\r\n                />\r\n                <img\r\n                    class=\"rune-img\"\r\n                    src=\"../../../assets/runes/7200_Domination.png\"\r\n                />\r\n            </div>\r\n            <div class=\"summoner-spells-container\">\r\n                <img\r\n                    class=\"summoner-spells-img\"\r\n                    [src]=\"summonerSpellImgURL + firstSummonerSpellName + '.png'\"\r\n                />\r\n                <img\r\n                    class=\"summoner-spells-img\"\r\n                    [src]=\"summonerSpellImgURL + secondSummonerSpellName + '.png'\"\r\n                />\r\n            </div>\r\n            <div class=\"match-info-container\">\r\n                <h4 class=\"match-result\">{{ setMatchResult() }}</h4>\r\n                <span class=\"match-type\">Normal Game</span>\r\n                <span class=\"match-duration-date\">28:14 25/09/2022</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"divider-container\">\r\n            <app-divider direction=\"vertical\"></app-divider>\r\n        </div>\r\n        <div class=\"match-scoreboard\">\r\n            <span class=\"match-score\"> {{ kill }} / {{ death }} / {{ assistance }}</span>\r\n            <span class=\"match-kda\">\r\n                <span class=\"match-highlighted-kda\">{{ kda() }}</span>\r\n                KDA\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <app-button label=\"Ver Mais\" size=\"md\"></app-button>\r\n</div>\r\n\r\n<div\r\n    *ngIf=\"type === 'simple'\"\r\n    [class]=\"type + '-card'\"\r\n    data-testid='cardElement'\r\n>\r\n\r\n</div>"
        },
        {
            "name": "DividerComponent",
            "id": "component-DividerComponent-00c835153d865a5132780f0a001fe7ceb9e0048fb199f9071016858720db4239837d4fd7dffea33ecbcd8aed9bb5b7f7aadba69eb4e5a76fcc35b56c7f95e660",
            "file": "src/app/components/divider/divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-divider",
            "styleUrls": [
                "./divider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./divider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "direction",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "DirectionType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { DirectionType } from './../core/types/direction';\r\n\r\nexport interface DividerProps {\r\n  direction?: DirectionType,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-divider',\r\n  templateUrl: './divider.component.html',\r\n  styleUrls: ['./divider.component.scss']\r\n})\r\nexport class DividerComponent implements OnInit {\r\n  @Input() direction?: DirectionType = 'horizontal';\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\nhr {\r\n    border: 0;\r\n    background: inherit;\r\n}\r\n\r\n.horizontal-divider {\r\n    border-top: 1px solid $neutral-3;\r\n    width: 100%;\r\n}\r\n\r\n.vertical-divider {\r\n    border-left: 1px solid $neutral-3;\r\n    min-height: 15px;\r\n    height: 100% ;\r\n}",
                    "styleUrl": "./divider.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<hr \r\n    [class]=\"direction + '-divider'\"\r\n    data-testid=\"dividerElement\"\r\n/>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-edeba2d67c3179156ed3feceba4de408c1e1334a99ce4a34e7f05d1e787afaa92a21b1438ebeb1303b5abf93c9247264e918fd275359304c32eee7d8624d6f74",
            "file": "src/app/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Size",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Type",
                    "decorators": []
                },
                {
                    "name": "visible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "passwordInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\ntype Type = 'user' | 'text' | 'password' | 'email' ;\r\ntype Size = 'sm' | 'md' ;\r\n\r\nexport interface AppInputProps {\r\n  placeholder?: string;\r\n  type?: Type;\r\n  size?: Size; \r\n  visible?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss']\r\n})\r\n\r\nexport class InputComponent  {\r\n  @Input() placeholder?: string = '';\r\n  @Input() type?: Type = 'text';\r\n  @Input() size?: Size = 'md';\r\n  @Input() visible? = false;\r\n\r\n  passwordInput() {\r\n    this.visible = !this.visible;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n@mixin input-parameters(\r\n    $padding,\r\n    $paddingLeft,\r\n) {\r\n    padding: $padding;\r\n    padding-left: $paddingLeft;\r\n}\r\n\r\n@mixin iconType($position, $iconName) {\r\n    background-image: url(\"../icon/svgs/#{$iconName}.svg\");\r\n    background-repeat: no-repeat;\r\n    background-position: $position ;\r\n}\r\n\r\n@mixin focus-box-shadow() {\r\n    box-shadow: 0px 0px 8px 1px rgba(103, 107, 220, 0.2);\r\n}\r\n\r\ndiv {\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: $neutral-2;\r\n    border-radius: 5px;\r\n    \r\n    input {\r\n        background-color: $neutral-2;\r\n        color: $neutral-color;\r\n        width: 100%;\r\n        border: none;\r\n        outline: none;\r\n        font-size: 1rem;\r\n        font-weight: 500;\r\n        cursor: text;\r\n        \r\n        &::placeholder {\r\n            color: $neutral-4;\r\n            font-weight: 500;\r\n        }\r\n    }\r\n\r\n    &:focus-within {\r\n        border: 1px solid $primary-color;\r\n        @include focus-box-shadow;\r\n    }\r\n}\r\n\r\n.app-input-user-sm {\r\n    @include input-parameters(9px, 36px);\r\n    @include iconType(0.55rem, 'user');\r\n\r\n    &:focus-within {\r\n        @include iconType(0.55rem, 'user-active');\r\n    }\r\n}\r\n\r\n.app-input-user-md {\r\n    @include input-parameters(13px, 42px);\r\n    @include iconType(0.75rem, 'user');\r\n\r\n    &:focus-within {\r\n        @include iconType(0.75rem, 'user-active');\r\n    }\r\n}\r\n\r\n.app-input-text-sm {\r\n    @include input-parameters(9px, 11px);\r\n}\r\n\r\n.app-input-text-md {\r\n    @include input-parameters(13px, 15px);\r\n}\r\n\r\n.app-input-password-sm {\r\n    @include input-parameters(9px, 36px);\r\n    \r\n    @include iconType(0.55rem, 'lock');\r\n\r\n    &:focus-within {\r\n        @include iconType(0.55rem, 'lock-active');\r\n    }\r\n}\r\n\r\n.app-input-password-md {\r\n    @include input-parameters(13px, 42px);\r\n\r\n    @include iconType(0.75rem, 'lock');\r\n\r\n    &:focus-within {\r\n        @include iconType(0.75rem, 'lock-active');\r\n    }\r\n}\r\n\r\n.app-input-email-sm {\r\n    @include input-parameters(9px, 36px);\r\n    \r\n    @include iconType(0.55rem, 'mail');\r\n\r\n    &:focus-within {\r\n        @include iconType(0.55rem, 'mail-active');\r\n    }\r\n}\r\n\r\n.app-input-email-md {\r\n    @include input-parameters(13px, 42px);\r\n\r\n    @include iconType(0.75rem, 'mail');\r\n\r\n    &:focus-within {\r\n        @include iconType(0.75rem, 'mail-active');\r\n    }\r\n}\r\n\r\nbutton {\r\n    position: relative;\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.password-visible {\r\n    background-image: url('../icon/svgs/eye.svg');\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n\r\n.password-invisible {\r\n    background-image: url('../icon/svgs/eye-off.svg');\r\n    width: 20px;\r\n    height: 20px;\r\n}",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div \r\n    [class]=\"'app-input-' + type + '-' + size\"\r\n    data-testid=\"divElement\"\r\n>\r\n    <input\r\n        [placeholder]=\"placeholder\"\r\n        [type] = \"visible ? 'text' : type\"\r\n        data-testid=\"inputElement\"\r\n    >\r\n        \r\n    <button\r\n        *ngIf=\"type === 'password'\"\r\n        (click)=\"passwordInput()\"\r\n        [class]=\"visible ? 'password-visible' : 'password-invisible'\"\r\n        data-testid=\"buttonElement\"\r\n    >\r\n    </button>\r\n</div>"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-8874bea6fc4a6ca8cd37c3aa4c82d0ceda24bc37604d2432fe4f400f5b510a20719e615f8abb795d837cdba139f602cb0cf46ba643a2913529f9f0dbb110e43c",
            "file": "src/app/components/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "lose",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'progress-bar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Type",
                    "decorators": []
                },
                {
                    "name": "win",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fullWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "winPercent",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { Type } from '../core/types/progress-bar';\r\n\r\nexport interface ProgressBarProps {\r\n  type: Type,\r\n  win: Number,\r\n  lose: Number,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n  @Input() type: Type = 'progress-bar';\r\n  @Input() win: Number = 0;\r\n  @Input() lose: Number = 0;\r\n\r\n  public fullWidth = false; \r\n\r\n  winPercent() {\r\n    const percent = (Number(this.win) / (Number(this.win) +  Number(this.lose))) * 100;\r\n\r\n    if (percent === 100) {\r\n      this.fullWidth = true;\r\n    }\r\n\r\n    return `${percent.toFixed(0)}%`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n@mixin details-parameters($color) {\r\n    font-weight: 600;\r\n    color: $color;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n@mixin border-radius($cent:boolean) {\r\n    @if ($cent) {\r\n        border-radius: 50px 50px 50px 50px;\r\n    } @else {\r\n        \r\n    }\r\n}\r\n\r\n.progress-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.win-lose {\r\n    @include details-parameters($neutral-4);\r\n}\r\n\r\n.win-percent {\r\n    @include details-parameters($secondary-color);\r\n}\r\n\r\n.progress-bar-container {\r\n    height: 5px;\r\n    width: 100%;\r\n    background-color: $negative-color;\r\n    border-radius: 50px;\r\n\r\n    .inner-progress-bar {\r\n        height: 5px;\r\n        background-color: $secondary-color;\r\n        border-right: 2px solid $neutral-1;\r\n        border-radius: 50px 0px 0px 50px;\r\n    }\r\n\r\n    .full-width {\r\n        border-radius: 50px !important;\r\n        border: 0 !important;\r\n    }\r\n}\r\n",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n    [class]=\"'app-' + type\"\r\n    data-testid=\"progressBarElement\"\r\n>\r\n    <div \r\n        *ngIf=\"type === 'info-progress-bar'\"\r\n        class=\"progress-info\"\r\n    >\r\n        <span class=\"win-lose\">{{ win }}V {{ lose }}D</span>\r\n        <span class=\"win-percent\">{{ winPercent() }}</span>\r\n    </div>\r\n    <div class=\"progress-bar-container\">\r\n        <div \r\n            class=\"inner-progress-bar\"\r\n            data-testid=\"barElement\"\r\n            [ngClass]=\"{\r\n                'full-width': fullWidth\r\n            }\"\r\n            [style.width]=\"winPercent()\"\r\n        ></div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-d0b62220b52cca5ac996bbbf35a38d182be8ece511a5e65fc7f09da39b7f7e4b253ba74c7dfc46365fcd508fa0fbd9154c06a44f520cbf408f51e0cb451988e0",
            "file": "src/app/components/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filter",
                    "defaultValue": "'false'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "filter",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Procure por um usuário...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "size",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchTypeOptions",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { SearchTypeOptions } from './../core/types/search';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\ntype size = 'md' | 'lg';\r\ntype filter = 'true' | 'false';\r\n\r\nexport interface SearchProps {\r\n  filter?: string;\r\n  size?: string;\r\n  placeholder?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  @Input() filter:filter = 'false';\r\n  @Input() size?:size = 'md';\r\n  @Input() placeholder? = 'Procure por um usuário...';\r\n\r\n  public type!: SearchTypeOptions;\r\n\r\n  ngOnInit(): void {\r\n    this.type = SearchTypeOptions[this.filter]\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n\r\n@mixin search-parameters($paddingLeft, $padding) {\r\n    padding: $padding;\r\n    padding-left: $paddingLeft;\r\n    background-color: $neutral-2;\r\n    color: $neutral-7;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 1rem;\r\n\r\n    &:focus {\r\n        border: 1px solid $primary-1;\r\n        @include focus-box-shadow();\r\n    }\r\n\r\n    &::placeholder {\r\n        color: $neutral-4;\r\n        font-weight: 500;\r\n    }\r\n}\r\n\r\n@mixin border-radius($bordersLeft, $bordersRight: 5px) {\r\n    border-radius: $bordersLeft;\r\n    border-top-right-radius: $bordersRight;\r\n    border-bottom-right-radius: $bordersRight;\r\n}\r\n\r\n@mixin focus-box-shadow() {\r\n    box-shadow: 0px 0px 8px 1px rgba(103, 107, 220, 0.2);\r\n}\r\n\r\n@mixin search-icon($position, $iconName) {\r\n    background-image: url(\"../icon/svgs/#{$iconName}.svg\");\r\n    background-repeat: no-repeat;\r\n    background-position: $position center;\r\n}\r\n\r\n@mixin clear-icon() {\r\n    &::-webkit-search-cancel-button {\r\n        cursor: pointer;\r\n        -webkit-appearance: none;\r\n        position:relative;\r\n        right: 0px;  \r\n        height: 8px;\r\n        width: 8px;\r\n        background-image: url('../icon/svgs/clear.svg');\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n\r\n.search-container {\r\n    display: flex;\r\n    width: 100%\r\n}\r\n\r\n.common-search-md {\r\n    @include search-parameters(36px, 9px);\r\n    @include border-radius(5px);\r\n    @include search-icon(0.5rem, 'search');\r\n    @include clear-icon();\r\n\r\n    &:focus {\r\n        @include search-icon(0.5rem, 'search-active');\r\n    }\r\n}\r\n\r\n.common-search-lg {\r\n    @include search-parameters(42px, 13px);\r\n    @include border-radius(5px);\r\n    @include search-icon(0.75rem, 'search');\r\n    @include clear-icon();\r\n    width: 100%;  \r\n\r\n    &:focus {\r\n        @include search-icon(0.75rem, 'search-active');\r\n    }\r\n}\r\n\r\n.filter-search-md {\r\n    @include search-parameters(36px, 9px);\r\n    @include border-radius(5px, 0px);\r\n    @include search-icon(0.5rem, 'search');\r\n    @include clear-icon();\r\n\r\n    &:focus {\r\n        @include search-icon(0.5rem, 'search-active');\r\n    }\r\n}\r\n\r\n.filter-search-lg {\r\n    @include search-parameters(42px, 13px);\r\n    @include border-radius(5px, 0px);\r\n    @include search-icon(0.75rem, 'search');\r\n    @include clear-icon();\r\n    width: 100%;  \r\n\r\n    &:focus {\r\n        @include search-icon(0.75rem, 'search-active');\r\n    }\r\n}\r\n\r\n.filter {\r\n    @include border-radius(0px, 5px);\r\n    border: none;\r\n    outline: none;\r\n    background-color: $neutral-3;\r\n    color: $neutral-6;\r\n    padding: 2px 5px;\r\n    font-size: 1rem;\r\n\r\n    &:focus {\r\n        border-bottom-right-radius: 0px;\r\n        border-bottom: 1px solid $neutral-1;\r\n    }\r\n}",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"search-container\">\r\n    <input \r\n    type=\"search\"\r\n    [class]=\"type + '-search-' + size\"\r\n    [placeholder]=\"placeholder\" />\r\n    <select *ngIf=\"filter === 'true'\" class=\"filter\">\r\n        <option value=\"0\" class=\"selected\">Summoners</option>\r\n        <option value=\"1\">Summoners</option>\r\n        <option value=\"2\">Summoners</option>\r\n        <option value=\"3\">Summoners</option>\r\n    </select>\r\n</div>\r\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-54d541d88f33b7c729cb1b3262bc2d8412fb80dd5d39b76044a16054f1b6df366a688a47bf723202e8e45f8cb5eb5c1d5ebaeb7ee7087eb91150fc4ae2717906",
            "file": "src/app/components/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "borderDirection",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "BorderDirection",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "String",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tabSize",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TabSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nexport type TabSize = 'sm' | 'md' | 'lg';\r\ntype BorderDirection = 'bottom' | 'top' | 'right' | 'left';\r\n\r\nexport interface AppTabProps {\r\n  label: string; \r\n  tabSize?: TabSize;\r\n  selected?: boolean;\r\n  disabled?: boolean; \r\n  borderDirection?: BorderDirection;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.scss']\r\n})\r\n\r\nexport class TabComponent {\r\n  @Input() label!: String;\r\n  @Input() tabSize?: TabSize = 'md';\r\n  @Input() selected? = false;\r\n  @Input() disabled? = false;\r\n  @Input() borderDirection?: BorderDirection = 'bottom';\r\n\r\n  public select() {\r\n    this.selected = true;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n@mixin tab-colors($color, $background) {\r\n    color: $color;\r\n    background-color: $background;\r\n}\r\n\r\n@mixin border-color($borderDirection) {\r\n    border-#{$borderDirection}-style: solid;\r\n}\r\n\r\n@mixin tab-focus() {\r\n    @include tab-colors($primary-color, transparent);\r\n    border-color: $linearGradient-1;\r\n    outline: 3px solid $primary-2;\r\n    outline-offset: 3px;\r\n}\r\n\r\nbutton {\r\n    display: flex;\r\n    align-items: center;\r\n    border: none;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    @include tab-colors($neutral-4, transparent);\r\n\r\n    &:hover {\r\n        @include tab-colors(darken(desaturate($primary-color, 30%), 12%),transparentize(darken($primary-color, 2%), 0.9));\r\n    }\r\n\r\n    &:focus-visible {\r\n        @include tab-focus();\r\n    }\r\n\r\n    &:active {\r\n        @include tab-colors($primary-color, transparent);\r\n        outline: none;\r\n    }\r\n}\r\n\r\n.tab-selected {\r\n    display: flex;\r\n    align-items: center;\r\n    border: none;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    @include tab-colors($primary-color, transparent); \r\n    border-image-slice: 1;\r\n    border-width: 2px;\r\n    border-image: $linearGradient-1 1 !important;  \r\n    \r\n    &:hover {\r\n        @include tab-colors($primary-color, transparentize(darken($primary-color, 2%), 0.9));\r\n    }\r\n    \r\n    &:focus-visible {\r\n        @include tab-focus();\r\n    }\r\n    \r\n    &:active {\r\n        @include tab-colors($primary-color, 'transparent');        \r\n        outline: none;\r\n    }\r\n}\r\n\r\n.app-tab-sm {\r\n    padding: 8px 16px;\r\n    font-size: 12px;\r\n}\r\n\r\n.app-tab-md {\r\n    padding: 10px 24px;\r\n    font-size: 14px;\r\n}\r\n\r\n.app-tab-lg {\r\n    padding: 12px 32px;\r\n    font-size: 16px;\r\n}\r\n\r\n.app-tab-border-bottom {\r\n    border-bottom: 2px solid transparent;\r\n    border-radius: 5px 5px 0px 0px;\r\n    @include border-color('bottom');\r\n}\r\n\r\n.app-tab-border-top {\r\n    border-top: 2px solid transparent;\r\n    border-radius: 0px 0px 5px 5px;\r\n    @include border-color('top');\r\n}\r\n\r\n.app-tab-border-right {\r\n    border-right: 2px solid transparent;\r\n    @include border-color('right');\r\n}\r\n\r\n.app-tab-border-left {\r\n    border-left: 2px solid transparent;\r\n    @include border-color('left');\r\n}",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \r\n    [class]=\"'app-tab-' + tabSize + ' app-tab-border-' + borderDirection\"\r\n    [class.tab-selected]=\"selected\"\r\n    [disabled]=\"disabled\"\r\n    (click)=\"select()\"\r\n>\r\n    {{ label || 'Adicione uma label' }}\r\n</button>"
        },
        {
            "name": "TabGroupComponent",
            "id": "component-TabGroupComponent-3ae92e6d9c782812d85f2e2df4a5ad985042d6fec0e75748e3827ceae6f10a036e5734c8f9f3cb106f084483e1cc634eb92a5d2abe13c219d372230c4eb73a00",
            "file": "src/app/components/tab-group/tab-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-group",
            "styleUrls": [
                "./tab-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "border",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "BorderDirectionType",
                    "decorators": []
                },
                {
                    "name": "direction",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "DirectionType",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TabSize",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "TabGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<TabGroup>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clearTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getBorderByDirection",
                    "args": [
                        {
                            "name": "direction",
                            "type": "DirectionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "BorderDirectionType",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "DirectionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tabSelected",
                            "type": "TabGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tabSelected",
                            "type": "TabGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { AppTabProps, TabSize } from '../tab/tab.component';\r\nimport { DirectionType, BorderDirectionType } from '../core/types/direction';\r\n\r\nexport interface TabGroup extends AppTabProps {\r\n  selected: boolean;\r\n}\r\n\r\nexport interface AppTabGroupProps {\r\n  tabs: TabGroup[];\r\n  border?: BorderDirectionType;\r\n  direction: DirectionType;\r\n  size?: TabSize;\r\n  selected: EventEmitter<TabGroup>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tab-group',\r\n  templateUrl: './tab-group.component.html',\r\n  styleUrls: ['./tab-group.component.scss']\r\n})\r\n\r\nexport class TabGroupComponent implements OnInit {\r\n  @Input() tabs: TabGroup[] = [];\r\n  @Input() direction: DirectionType = 'horizontal';\r\n  @Input() border?: BorderDirectionType;\r\n  @Input() size: TabSize = 'md';\r\n  @Output() selected = new EventEmitter<TabGroup>();\r\n\r\n  private getBorderByDirection(direction: DirectionType): BorderDirectionType {\r\n    const directions = {\r\n      horizontal: 'bottom',\r\n      vertical: 'right',\r\n    };\r\n\r\n    if (this.border) {\r\n      return this.border;\r\n    }\r\n\r\n    return directions[direction] as BorderDirectionType;\r\n  }\r\n\r\n  private clearTabs() {\r\n    this.tabs.forEach((tab) => {\r\n      tab.selected = false;\r\n    });\r\n  }\r\n\r\n  public selectTab(tabSelected: TabGroup) {\r\n    this.clearTabs();\r\n    tabSelected.selected = true;\r\n    this.selected.emit(tabSelected);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.border = this.getBorderByDirection(this.direction);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-tab-group {\r\n    display: flex;\r\n    \r\n    :first-child {\r\n        display: flex;\r\n        gap: 10px;\r\n    };\r\n};\r\n\r\n.app-tab-group-column { \r\n    flex-direction: column;\r\n\r\n    ::ng-deep {\r\n        app-tab {\r\n            button {\r\n                width: 100%;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./tab-group.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div data-testid=\"app-tab-group\" class=\"app-tab-group\">\r\n    <div [class.app-tab-group-column]=\"direction === 'vertical'\">\r\n        <app-tab\r\n            *ngFor=\"let tab of tabs\"\r\n            [label]=\"tab.label\"\r\n            [tabSize]=\"size\"\r\n            [selected]=\"tab.selected\"\r\n            [borderDirection]=\"border\"\r\n            (click)=\"selectTab(tab)\"\r\n        >\r\n        </app-tab>\r\n    </div>\r\n</div>"
        },
        {
            "name": "TagComponent",
            "id": "component-TagComponent-0e72735eb03afefa0e9e60bd69f562f9337101ef972e907471ddd90e4e276bd055daaad4b7a41b60b3241b6c82b932b30e2a2834c4404491c33f6a97b93d506e",
            "file": "src/app/components/tag/tag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tag",
            "styleUrls": [
                "./tag.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tag.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Label",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PositionIconOptions",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { PositionIconOptions, Label } from './../core/types/tag';\r\n// import { IconType } from './../icon/icon.component';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\nexport interface TagProps {\r\n  label: Label;\r\n  icon?: boolean;\r\n  iconType?: PositionIconOptions;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.scss']\r\n})\r\nexport class TagComponent implements OnInit {\r\n  @Input() public label!: Label;\r\n  @Input() public icon? = true;\r\n\r\n  public iconType!: PositionIconOptions;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.iconType = PositionIconOptions[this.label];\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/index.scss';\r\n\r\n.tag-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.4rem;\r\n    text-transform: uppercase;\r\n    font-size: 0.85rem;\r\n    font-weight: 600;\r\n    color: $primary-color;\r\n    padding: 8px 10px;\r\n    border-radius: 8px;\r\n    background-color: transparentize($primary-color, 0.9) ;\r\n    width: fit-content;\r\n}\r\n\r\n.tag-icon {\r\n    height: 18px;\r\n}",
                    "styleUrl": "./tag.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \r\n    class=\"tag-container\"\r\n    data-testid=\"app-tag\"\r\n>\r\n    <app-icon \r\n        *ngIf=\"icon\"\r\n        [type]=\"iconType\"\r\n        color=\"transparent\"\r\n        [class]=\"iconType + '-icon'\"\r\n        data-testid=\"tag-icon\"\r\n    ></app-icon>\r\n    {{ label }}\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-77d579198f5127abfd90c5169d861adc487b42ea13793395ac0e3f7a49e307c880ada78211eff2f2e3fc01700f0cf05d0eed90c61f0257de3aff86aec4f6f525",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BadgeComponent } from './components/badge/badge.component';\r\nimport { AvatarComponent } from './components/avatar/avatar.component';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { DividerComponent } from './components/divider/divider.component';\r\nimport { AppIconComponent } from './components/icon/icon.component';\r\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\r\nimport { InputComponent } from './components/input/input.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { TabComponent } from './components/tab/tab.component';\r\nimport { TabGroupComponent } from './components/tab-group/tab-group.component';\r\nimport { TagComponent } from './components/tag/tag.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AvatarComponent,\r\n    SearchComponent,\r\n    ButtonComponent,\r\n    AppIconComponent,\r\n    TagComponent,\r\n    InputComponent,\r\n    CardComponent,\r\n    BadgeComponent,\r\n    TabGroupComponent,\r\n    TabComponent,\r\n    ProgressBarComponent,\r\n    DividerComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "AppIconComponent"
                        },
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "DividerComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-df9ed0e0f5f419ab060ac5ce9115381b3db5bf76e2ecac8a9bb755c546e57e0aeb67ff817532e07e86ce0ecb4a6d7a6ba14afb28180e9ee048534772104b5f2d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [],\r\n})\r\n\r\nexport class ComponentsModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CardSimple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "championSplashImgURL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/services/api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'http://ddragon.leagueoflegends.com/cdn/img/champion/splash/'"
            },
            {
                "name": "championSquareImgURL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/services/api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://ddragon.leagueoflegends.com/cdn/12.20.1/img/champion/'"
            },
            {
                "name": "championURL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/services/api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://ddragon.leagueoflegends.com/cdn/12.20.1/data/pt_BR/champion.json'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "iconsPaths",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/icon/svgs/icons.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, string>",
                "defaultValue": "{\r\n    add,\r\n    'arrow-down': arrowDown,\r\n    close,\r\n    search,\r\n    interrogation,\r\n    'position-bot': positionBot,\r\n    'position-jungle': positionJungle,\r\n    'position-mid': positionMid,\r\n    'position-support': positionSupport,\r\n    'position-top': positionTop,\r\n    'arrow-left': arrowLeft,\r\n    bookmark,\r\n    edit,\r\n    'notification-all': notificationAll,\r\n    'notification-none': notificationNone,\r\n    settings,\r\n    star\r\n}"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Photo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "summonerSpellImgURL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/services/api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://ddragon.leagueoflegends.com/cdn/12.20.1/img/spell/'"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AvatarComponent>",
                "defaultValue": "(args: AvatarComponent) => ({\r\n    component: AvatarComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [AvatarComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BadgeComponent>",
                "defaultValue": "(args: BadgeComponent) => ({\r\n    component: BadgeComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [BadgeComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n    component: ButtonComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [ButtonComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\r\n    component: CardComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [CardComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProgressBarComponent>",
                "defaultValue": "(args: ProgressBarComponent) => ({\r\n    component: ProgressBarComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [ProgressBarComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TabGroupComponent>",
                "defaultValue": "(args: TabGroupComponent) => ({\r\n    component: TabGroupComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [TabGroupComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchComponent>",
                "defaultValue": "(args: SearchComponent) => ({\r\n    component: SearchComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [SearchComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TagComponent>",
                "defaultValue": "(args: TagComponent) => ({\r\n    component: TagComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [TagComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\r\n    component: InputComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [InputComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
            },
            {
                "name": "TypeAdc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeAdc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeAdd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeBorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeBottomLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeBottomRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeClose",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeEmail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeGhost",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeJungle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeLevel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeLg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeLg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeMd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeMd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeMid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeNoBorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeNotification",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypePassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypePosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypePrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeSimple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/progress-bar/progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeSimple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeSm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeSm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeSuporte",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeTop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeTopLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeTopRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TypeValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "BadgeDirectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"bottom-right\" | \"bottom-left\" | \"top-right\" | \"top-left\"",
                "file": "src/app/components/core/types/badge.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "BorderDirection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"bottom\" | \"top\" | \"right\" | \"left\"",
                "file": "src/app/components/tab/tab.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "BorderDirectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"bottom\" | \"top\" | \"right\" | \"left\"",
                "file": "src/app/components/core/types/direction.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary-color\" | \"secondary-color\"",
                "file": "src/app/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "DirectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "src/app/components/core/types/direction.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "filter",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"true\" | \"false\"",
                "file": "src/app/components/search/search.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IconType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/components/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"adc\" | \"jungle\" | \"mid\" | \"suporte\" | \"top\"",
                "file": "src/app/components/core/types/tag.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SafeAny",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "any",
                "file": "src/app/components/utils/safe-any.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 130
            },
            {
                "name": "size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"md\" | \"lg\"",
                "file": "src/app/components/search/search.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\"",
                "file": "src/app/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "src/app/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\"",
                "file": "src/app/components/input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SizeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "src/app/components/core/types/size.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SummonerSpell",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"barrier\" | \"cleanse\" | \"ignite\" | \"exhaust\" | \"flash\" | \"ghost\" | \"heal\" | \"clarity\" | \"smite\" | \"teleport\"",
                "file": "src/app/components/core/types/card.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SvgModule",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/components/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 199
            },
            {
                "name": "TabSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\"",
                "file": "src/app/components/tab/tab.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Type",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"notification\" | \"level\"",
                "file": "src/app/components/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Type",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                "file": "src/app/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Type",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"user\" | \"text\" | \"password\" | \"email\"",
                "file": "src/app/components/input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Type",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"match-history\" | \"simple\"",
                "file": "src/app/components/core/types/card.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Type",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"progress-bar\" | \"info-progress-bar\"",
                "file": "src/app/components/core/types/progress-bar.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TypeBorder",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"true\" | \"false\"",
                "file": "src/app/components/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Victory",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"true\" | \"false\" | \"undefined\"",
                "file": "src/app/components/core/types/card.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "AvatarBorderOptions",
                "childs": [
                    {
                        "name": "true",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bordered"
                    },
                    {
                        "name": "false",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "common"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/core/types/avatar.ts"
            },
            {
                "name": "ButtonIconSizeOptions",
                "childs": [
                    {
                        "name": "sm",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    },
                    {
                        "name": "md",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    },
                    {
                        "name": "lg",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/core/types/button.ts"
            },
            {
                "name": "MatchResultOptions",
                "childs": [
                    {
                        "name": "true",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "victory-match-card"
                    },
                    {
                        "name": "false",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "defeat-match-card"
                    },
                    {
                        "name": "undefined",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "undefined-match-card"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/core/types/card.ts"
            },
            {
                "name": "PositionIconOptions",
                "childs": [
                    {
                        "name": "adc",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "position-bot"
                    },
                    {
                        "name": "jungle",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "position-jungle"
                    },
                    {
                        "name": "mid",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "position-mid"
                    },
                    {
                        "name": "suporte",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "position-support"
                    },
                    {
                        "name": "top",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "position-top"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/core/types/tag.ts"
            },
            {
                "name": "SearchTypeOptions",
                "childs": [
                    {
                        "name": "true",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "filter"
                    },
                    {
                        "name": "false",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "common"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/core/types/search.ts"
            },
            {
                "name": "SummonerSpellOptions",
                "childs": [
                    {
                        "name": "barrier",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerBarrier"
                    },
                    {
                        "name": "cleanse",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerBoost"
                    },
                    {
                        "name": "ignite",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerDot"
                    },
                    {
                        "name": "exhaust",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerExhaust"
                    },
                    {
                        "name": "flash",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerFlash"
                    },
                    {
                        "name": "ghost",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerHaste"
                    },
                    {
                        "name": "heal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerHeal"
                    },
                    {
                        "name": "clarity",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerMana"
                    },
                    {
                        "name": "smite",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerSmite"
                    },
                    {
                        "name": "teleport",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SummonerTeleport"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/core/types/card.ts"
            }
        ],
        "groupedVariables": {
            "src/app/components/card/card.stories.ts": [
                {
                    "name": "CardSimple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\r\n    component: CardComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [CardComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                }
            ],
            "src/services/api.ts": [
                {
                    "name": "championSplashImgURL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/services/api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'http://ddragon.leagueoflegends.com/cdn/img/champion/splash/'"
                },
                {
                    "name": "championSquareImgURL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/services/api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://ddragon.leagueoflegends.com/cdn/12.20.1/img/champion/'"
                },
                {
                    "name": "championURL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/services/api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://ddragon.leagueoflegends.com/cdn/12.20.1/data/pt_BR/champion.json'"
                },
                {
                    "name": "summonerSpellImgURL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/services/api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://ddragon.leagueoflegends.com/cdn/12.20.1/img/spell/'"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/components/icon/svgs/icons.ts": [
                {
                    "name": "iconsPaths",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/icon/svgs/icons.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, string>",
                    "defaultValue": "{\r\n    add,\r\n    'arrow-down': arrowDown,\r\n    close,\r\n    search,\r\n    interrogation,\r\n    'position-bot': positionBot,\r\n    'position-jungle': positionJungle,\r\n    'position-mid': positionMid,\r\n    'position-support': positionSupport,\r\n    'position-top': positionTop,\r\n    'arrow-left': arrowLeft,\r\n    bookmark,\r\n    edit,\r\n    'notification-all': notificationAll,\r\n    'notification-none': notificationNone,\r\n    settings,\r\n    star\r\n}"
                }
            ],
            "src/app/components/input/input.stories.ts": [
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\r\n    component: InputComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [InputComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeEmail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypePassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/avatar/avatar.stories.ts": [
                {
                    "name": "Photo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "(args: AvatarComponent) => ({\r\n    component: AvatarComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [AvatarComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeBorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeLg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeMd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeNoBorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeSm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/badge/badge.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BadgeComponent>",
                    "defaultValue": "(args: BadgeComponent) => ({\r\n    component: BadgeComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [BadgeComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeBottomLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeBottomRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeLevel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeNotification",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeTopLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeTopRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n    component: ButtonComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [ButtonComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeAdd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeClose",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeGhost",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeLg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeMd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypePosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypePrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeSm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/progress-bar/progress-bar.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProgressBarComponent>",
                    "defaultValue": "(args: ProgressBarComponent) => ({\r\n    component: ProgressBarComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [ProgressBarComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeSimple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/progress-bar/progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/tab-group/tab-group.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TabGroupComponent>",
                    "defaultValue": "(args: TabGroupComponent) => ({\r\n    component: TabGroupComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [TabGroupComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeAdc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/search/search.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchComponent>",
                    "defaultValue": "(args: SearchComponent) => ({\r\n    component: SearchComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [SearchComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeSimple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/tag/tag.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TagComponent>",
                    "defaultValue": "(args: TagComponent) => ({\r\n    component: TagComponent,\r\n    props: args,\r\n    moduleMetadata: {\r\n        declarations: [TagComponent, AppIconComponent],\r\n        imports: [CommonModule],\r\n    },\r\n})"
                },
                {
                    "name": "TypeAdc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeJungle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeMid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeSuporte",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TypeTop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/components/core/types/avatar.ts": [
                {
                    "name": "AvatarBorderOptions",
                    "childs": [
                        {
                            "name": "true",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bordered"
                        },
                        {
                            "name": "false",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "common"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/core/types/avatar.ts"
                }
            ],
            "src/app/components/core/types/button.ts": [
                {
                    "name": "ButtonIconSizeOptions",
                    "childs": [
                        {
                            "name": "sm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        },
                        {
                            "name": "md",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        },
                        {
                            "name": "lg",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/core/types/button.ts"
                }
            ],
            "src/app/components/core/types/card.ts": [
                {
                    "name": "MatchResultOptions",
                    "childs": [
                        {
                            "name": "true",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "victory-match-card"
                        },
                        {
                            "name": "false",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "defeat-match-card"
                        },
                        {
                            "name": "undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "undefined-match-card"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/core/types/card.ts"
                },
                {
                    "name": "SummonerSpellOptions",
                    "childs": [
                        {
                            "name": "barrier",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerBarrier"
                        },
                        {
                            "name": "cleanse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerBoost"
                        },
                        {
                            "name": "ignite",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerDot"
                        },
                        {
                            "name": "exhaust",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerExhaust"
                        },
                        {
                            "name": "flash",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerFlash"
                        },
                        {
                            "name": "ghost",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerHaste"
                        },
                        {
                            "name": "heal",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerHeal"
                        },
                        {
                            "name": "clarity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerMana"
                        },
                        {
                            "name": "smite",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerSmite"
                        },
                        {
                            "name": "teleport",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SummonerTeleport"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/core/types/card.ts"
                }
            ],
            "src/app/components/core/types/tag.ts": [
                {
                    "name": "PositionIconOptions",
                    "childs": [
                        {
                            "name": "adc",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "position-bot"
                        },
                        {
                            "name": "jungle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "position-jungle"
                        },
                        {
                            "name": "mid",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "position-mid"
                        },
                        {
                            "name": "suporte",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "position-support"
                        },
                        {
                            "name": "top",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "position-top"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/core/types/tag.ts"
                }
            ],
            "src/app/components/core/types/search.ts": [
                {
                    "name": "SearchTypeOptions",
                    "childs": [
                        {
                            "name": "true",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "filter"
                        },
                        {
                            "name": "false",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "common"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/core/types/search.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/components/core/types/badge.ts": [
                {
                    "name": "BadgeDirectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"bottom-right\" | \"bottom-left\" | \"top-right\" | \"top-left\"",
                    "file": "src/app/components/core/types/badge.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/tab/tab.component.ts": [
                {
                    "name": "BorderDirection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"bottom\" | \"top\" | \"right\" | \"left\"",
                    "file": "src/app/components/tab/tab.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "TabSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "src/app/components/tab/tab.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/core/types/direction.ts": [
                {
                    "name": "BorderDirectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"bottom\" | \"top\" | \"right\" | \"left\"",
                    "file": "src/app/components/core/types/direction.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "DirectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "src/app/components/core/types/direction.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/button/button.component.ts": [
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary-color\" | \"secondary-color\"",
                    "file": "src/app/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "src/app/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Type",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"ghost\"",
                    "file": "src/app/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/search/search.component.ts": [
                {
                    "name": "filter",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"true\" | \"false\"",
                    "file": "src/app/components/search/search.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"md\" | \"lg\"",
                    "file": "src/app/components/search/search.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/icon/icon.component.ts": [
                {
                    "name": "IconType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/components/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "SvgModule",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/components/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 199
                }
            ],
            "src/app/components/core/types/tag.ts": [
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"adc\" | \"jungle\" | \"mid\" | \"suporte\" | \"top\"",
                    "file": "src/app/components/core/types/tag.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/utils/safe-any.ts": [
                {
                    "name": "SafeAny",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "any",
                    "file": "src/app/components/utils/safe-any.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 130
                }
            ],
            "src/app/components/badge/badge.component.ts": [
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\"",
                    "file": "src/app/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Type",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"notification\" | \"level\"",
                    "file": "src/app/components/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/input/input.component.ts": [
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\"",
                    "file": "src/app/components/input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Type",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"user\" | \"text\" | \"password\" | \"email\"",
                    "file": "src/app/components/input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/core/types/size.ts": [
                {
                    "name": "SizeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\"",
                    "file": "src/app/components/core/types/size.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/core/types/card.ts": [
                {
                    "name": "SummonerSpell",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"barrier\" | \"cleanse\" | \"ignite\" | \"exhaust\" | \"flash\" | \"ghost\" | \"heal\" | \"clarity\" | \"smite\" | \"teleport\"",
                    "file": "src/app/components/core/types/card.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Type",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"match-history\" | \"simple\"",
                    "file": "src/app/components/core/types/card.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Victory",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"true\" | \"false\" | \"undefined\"",
                    "file": "src/app/components/core/types/card.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/core/types/progress-bar.ts": [
                {
                    "name": "Type",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"progress-bar\" | \"info-progress-bar\"",
                    "file": "src/app/components/core/types/progress-bar.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/components/avatar/avatar.component.ts": [
                {
                    "name": "TypeBorder",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"true\" | \"false\"",
                    "file": "src/app/components/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppAvatarProps",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Photo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeBorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeLg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeMd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeNoBorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeSm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppBadgeProps",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeBottomLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeBottomRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeLevel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeNotification",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeTopLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeTopRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppButtonProps",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeAdd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeClose",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeGhost",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeLg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeMd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypePosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypePrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeSm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CardProps",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardSimple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/divider/divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/divider/divider.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DividerProps",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/icon.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IconProps",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/icon/svgs/icons.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconsPaths",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppInputProps",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeEmail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypePassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar/progress-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProgressBarProps",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/progress-bar/progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeSimple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchProps",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeSimple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab-group/tab-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab-group/tab-group.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppTabGroupProps",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab-group/tab-group.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabGroup",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab-group/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab-group/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeAdc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab/tab.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppTabProps",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TagProps",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeAdc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeJungle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeMid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeSuporte",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TypeTop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "championSplashImgURL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "championSquareImgURL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "championURL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "summonerSpellImgURL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}